{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Products API",
    "description": "Documentation for Products API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:4000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Products",
      "description": "API for products in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/products": {
      "post": {
        "summary": "Create new product",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "description": "order placed for purchasing the pet",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created Successfully!",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401":{
            "description": "Access Forbidden"
          },
          "404":{
            "description": "No token provided!"
          },
          "500":{
            "description": "Creation of a new product failed!"
          }
        }
      },
      "get": {
        "summary": "Get all products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Created Successfully!",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401":{
            "description": "Access Forbidden"
          },
          "404":{
            "description": "No token provided!"
          },
          "500":{
            "description": "Creation of a new product failed!"
          }
        }
      }
    },
    "/api/products/{_id}": {
      "put": {
        "summary": "Update an existing product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of product to edit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "editing existing product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updates Successfully!",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401":{
            "description": "Access Forbidden"
          },
          "404":{
            "description": "No token provided!"
          },
          "500":{
            "description": "Updating failed!"
          }
        }
      },
      "delete": {
        "summary": "Deletes a product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of product to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully!",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401":{
            "description": "Access Forbidden"
          },
          "404":{
            "description": "No token provided!"
          },
          "500":{
            "description": "Deleting of a product failed!"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "properties": {
        "id": {
          "type": "string",
          "example": "6472131821"
        },
        "name": {
          "type": "string",
          "example": "Audi"
        },
        "price": {
          "type": "string",
          "example": "11"
        },
        "imageURL": {
          "type": "string",
          "example": "audi.jpeg"
        }
      },
      "required": [
        "id",
        "name",
        "imageURL",
        "price"
      ]
    }
  }
}
